###############
# Device Detector - The Universal Device Detection library for parsing User Agents
#
# @link https://matomo.org
# @license http://www.gnu.org/licenses/lgpl.html LGPL v3 or later
#
#  ATTENTION: This file may only include tv user agents that contain 'HbbTV/([1-9]{1}(\.[0-9]{1}){1,2})'
#
###############

# Airties
Airties:
  regex: 'Airties'
  device: 'tv'
  models:
    - regex: 'Airties; ?([^);/]+)'
      model: '$1'

# ALDI NORD
'ALDI NORD':
  regex: 'ALDINORD[;,]'
  device: 'tv'
  model: ''

# ALDI SÜD
'ALDI SÜD':
  regex: 'ALDISUED[;,]'
  device: 'tv'
  model: ''

# Altech UEC
'Altech UEC':
  regex: 'Altech UEC'
  device: 'tv'
  models:
    - regex: 'Altech UEC; ?([^);/]+)'
      model: '$1'

# AOC
AOC:
  regex: 'AOC'
  device: 'tv'
  models:
    - regex: '(LE43S5970-20|S50856)'
      model: '$1'

# Atvio
Atvio:
  regex: 'ATVIO'
  device: 'tv'
  models:
    - regex: '55D1620'
      model: '55D1620'

# BangOlufsen
BangOlufsen:
  regex: 'Bangolufsen'
  device: 'tv'
  model: 'BeoVision'

# Bush
Bush:
  regex: 'BUSH[;,]'
  device: 'tv'
  model: ''

# Celcus
Celcus:
  regex: 'CELCUS[;,]'
  device: 'tv'
  model: ''

# Changhong
Changhong:
  regex: 'Changhong'
  device: 'tv'
  models:
    - regex: 'Changhong; ?([^);/]+)'
      model: '$1'

# CreNova
CreNova:
  regex: 'CreNova'
  device: 'tv'
  model: 'CNV001'

# Digihome
Digihome:
  regex: 'DIGIHOME[;,]'
  device: 'tv'
  model: ''

# DMM
DMM:
  regex: 'DMM'
  device: 'tv'
  model: 'Dreambox'

# Electronia
Electronia:
  regex: 'ELECTRONIA'
  device: 'tv'
  models:
    - regex: 'MB110'
      model: 'MB110'

# Essentielb
Essentielb:
  regex: 'ESSENTIELB[;,]'
  device: 'tv'
  model: ''

# Finlux
Finlux:
  regex: 'FINLUX[;,]'
  device: 'tv'
  model: ''

# Fuego
Fuego:
  regex: 'FUEGO'
  device: 'tv'
  models:
    - regex: 'MB211'
      model: 'MB211'

# GoGEN (https://www.gogen.cz/)
GoGEN:
  regex: 'GOGEN'
  device: 'tv'
  models:
    - regex: 'MB110'
      model: 'MB110'

# Grundig
Grundig:
  regex: '(OWB|Grundig|Arcelik)'
  device: 'tv'
  model: ''

# Haier
Haier:
  regex: 'HHW_HAIER'
  device: 'tv'
  models:
    - regex: 'MB110'
      model: 'MB110'

# Hi-Level
Hi-Level:
  regex: 'HI-LEVEL[;,]'
  device: 'tv'
  model: ''

# Hisense
Hisense:
  regex: 'Hisense'
  device: 'tv'
  models:
    - regex: '(L[A-Z]{2,3}[0-9]{2}[A-Z][0-9]{3,4}[A-Z]{0,6}[0-9]?[A-Z]?)'
      model: '$1'
    - regex: '(H[A-Z]?[0-9]{2}[A-Z][0-9]{3,4}[A-Z]{0,4})'
      model: '$1'

# Hitachi
Hitachi:
  regex: 'Hitachi[;,]'
  device: 'tv'
  models:
    - regex: '49D2900'
      model: '49D2900'

# Horizon
Horizon:
  regex: 'HORIZON[;,]'
  device: 'tv'
  model: ''

# Hotel
Hotel:
  regex: 'HOTEL[;,]'
  device: 'tv'
  model: ''

# Humax
Humax:
  regex: 'Humax'
  device: 'tv'
  models:
    - regex: '(HD-FOX C|HD (FOX\+|NANO)|iCord (HD\+|MINI|Cable)|(CX|IR)HD-5100(C|S)|HM9503HD)'
      model: '$1'
    - regex: 'HMS1000S'
      model: 'HMS-1000S'
    - regex: 'Humax; ([^);/]+)'
      model: '$1'

# Hyundai
Hyundai:
  regex: 'HYUNDAI[;,]'
  device: 'tv'
  model: ''

# IKEA
Ikea:
  regex: 'Ikea'
  device: 'tv'
  models:
    - regex: '(LF1V[0-9]{3})'
      model: '$1'

# Intek
Intek:
  regex: 'Intek'
  device: 'tv'
  models:
    - regex: '(Vantage|VT-100|VT-1)'
      model: '$1'

# Inverto
Inverto:
  regex: 'Inverto'
  device: 'tv'
  models:
    - regex: 'inverto; ([^);/]+)'
      model: '$1'
    - regex: '(Volksbox Web Edition|Volksbox Essential|Volksbox II|Volksbox)'
      model: '$1'

# JVC
JVC:
  regex: 'JVC[;,]'
  device: 'tv'
  model: ''

# Kalley
Kalley:
  regex: 'KALLEY[;,]'
  device: 'tv'
  models:
    - regex: '32D1620'
      model: '32D1620'

# KUBO
KUBO:
  regex: 'KUBO'
  device: 'tv'
  models:
    - regex: 'MB120'
      model: 'MB120'

# Laurus
Laurus:
  regex: 'LAURUS'
  device: 'tv'
  models:
    - regex: 'MB130'
      model: 'MB130'

# LG
LG:
  regex: 'LGE'
  device: 'tv'
  models:
    - regex: '(NetCast [0-9]{1}.[0-9]{1}|GLOBAL_PLAT3)'
      model: '$1'
    - regex: '(OLED[0-9]{2}[A-Z][0-9][A-Z])'
      model: '$1'
    - regex: '43UK6400PLF'
      model: '43UK6400PLF'
    - regex: '43UM71007LB'
      model: '43UM71007LB'
    - regex: 'LGE;? ?([0-9]{2}[A-Z]{2}[0-9]{2,4}[A-Z]?)'
      model: '$1'

# Lifemaxx
Lifemaxx:
  regex: 'Lifemaxx'
  device: 'tv'
  models:
    - regex: 'MB120'
      model: 'MB120'

# Linsar
Linsar:
  regex: 'LINSAR[;,]'
  device: 'tv'
  model: ''

# Loewe
Loewe:
  regex: 'Loewe'
  device: 'tv'
  models:
    - regex: '([A-Z]{2}[0-9]{3})'
      model: '$1'

# Luxor
Luxor:
  regex: 'LUXOR[;,]'
  device: 'tv'
  model: ''

# MediaTek
MediaTek:
  regex: 'MTK'
  device: 'tv'
  models:
    - regex: '(MT[0-9]{4})'
      model: '$1'

# Medion
Medion:
  regex: 'Medion'
  device: 'tv'
  models:
    - regex: '(MB[0-9]{2})'
      model: '$1'

# Miray
Miray:
  regex: 'MIRAY'
  device: 'tv'
  models:
    - regex: 'LEDM-322NIP'
      model: 'LEDM-322NIP'

# Nordmende
Nordmende:
  regex: 'NORDMENDE[;,]'
  device: 'tv'
  model: ''

# Metz
Metz:
  regex: 'Metz'
  device: 'tv'
  model: ''

# Ok
Ok:
  regex: 'OK[;,]'
  device: 'tv'
  model: ''

# Panasonic
Panasonic:
  regex: 'Panasonic'
  device: 'tv'
  models:
    - regex: '(VIERA [0-9]{1,4})|(DIGA [A-Z]{1}[0-9]{4})'
      model: '$1'
    - regex: 'DIGA Webkit ([A-Z]{1}[0-9]{4})'
      model: 'DIGA $1'
    - regex: 'SmartTV(201[89]|202[0-1])'
      model: 'Smart TV ($1)'

# PEAQ
PEAQ:
  regex: 'PEAQ'
  device: 'tv'
  models:
    - regex: '(LF1V[0-9]{3})'
      model: '$1'

# Philips
Philips:
  regex: 'Philips|NETTV/'
  device: 'tv'
  models:
    - regex: 'Philips[,;] ?((?! )[^),;/]+)'
      model: '$1'
    - regex: 'NETTV/[0-9\.]{5}'
      model: 'NetTV Series'

# Polaroid
Polaroid:
  regex: 'POLAROID[;,]'
  device: 'tv'
  model: ''

# REGAL
REGAL:
  regex: 'REGAL'
  device: 'tv'
  models:
    - regex: 'MB211'
      model: 'MB211'

# Saba
Saba:
  regex: 'Saba'
  device: 'tv'
  models:
    - regex: 'MB110'
      model: 'MB110'

# Salora
Salora:
  regex: 'Salora[;,]'
  device: 'tv'
  model: ''

# Samsung
Samsung:
  regex: 'Samsung|Maple_2011'
  device: 'tv'
  models:
    - regex: 'SmartTV(201[2-9]|202[0-1]):([^);/]+)'
      model: '$2'
    - regex: 'SmartTV(201[2-9]|202[0-1])'
      model: 'Smart TV $1'
    - regex: 'Maple_2011'
      model: 'Smart TV 2011'

# Selevision
Selevision:
  regex: 'Selevision'
  device: 'tv'
  models:
    - regex: 'Selevision; (?:Selevision )?([^);/]+)'
      model: '$1'
    - regex: '(EMC1000i)'
      model: '$1'

# Sharp
Sharp:
  regex: '(?:UMC-)?Sharp'
  device: 'tv'
  models:
    - regex: 'Sharp[,;] ?((?! |HbbTV)[^),;/]+)'
      model: '$1'
    - regex: '(LE[0-9]{3}[A-Z]{0,3})'
      model: '$1'
    - regex: 'LC-([^);/]+)'
      model: 'LC-$1'

# Skyworth
Skyworth:
  regex: 'Sky_worth'
  device: 'tv'
  models:
    - regex: 'Sky_worth;([^);/]+)'
      model: '$1'

# Smart
Smart:
  regex: 'Smart[^a-z]'
  device: 'tv'
  models:
    - regex: 'Smart; ([^);/]+)'
      model: '$1'
    - regex: '([A-Z]{2}[0-9]{2}|ZAPPIX)'
      model: '$1'

# Sony
Sony:
  regex: 'Sony'
  device: 'tv'
  models:
    - regex: 'KD-43X8305C'
      model: 'KD-43X8305C'
    - regex: '(KDL?-?[0-9]{2}[A-Z]{1,2}[0-9]{1,5})'
      model: '$1'

# Technika
Technika:
  regex: 'TECHNIKA'
  device: 'tv'
  models:
    - regex: 'MB211'
      model: 'MB211'

# TechniSat
TechniSat:
  regex: 'TechniSat'
  device: 'tv'
  models:
    - regex: '((DigiCorder|MultyVision|Digit) (ISIO S|ISIO C|ISIO))'
      model: '$1'

# TechnoTrend
TechnoTrend:
  regex: 'TechnoTrend'
  device: 'tv'
  models:
    - regex: '([A-Z]{1}-[0-9]{3})'
      model: '$1'

# Techwood
Techwood:
  regex: 'Techwood[;,]'
  device: 'tv'
  model: ''

# Telefunken
Telefunken:
  regex: 'Telefunken'
  device: 'tv'
  models:
    - regex: '(MB[0-9]{2})'
      model: '$1'

# TCL
TCL:
  regex: 'TCL'
  device: 'tv'
  models:
    - regex: '(32D1820|39D2900|32D2930|(?:32|43)S4900)'
      model: '$1'
    - regex: '(LF1V[0-9]{3})'
      model: '$1'

# Thomson
Thomson:
  regex: 'THOMSON[,]?|THOM'
  device: 'tv'
  models:
    - regex: '(TB28D19DHS-01|T28D18SFS-01B)'
      model: '$1 28.0"'
    - regex: '(T32RTM5040|T32D18SFS-01B)'
      model: '$1 32.0"'
    - regex: '(T43FSL5031|T43D18SFS-01B)'
      model: '$1 43.0"'
    - regex: '(T40D18SFS-01B)'
      model: '$1 40.0"'
    - regex: '(T49D18SFS-01B)'
      model: '$1 49.0"'
    - regex: '(T55D18[SD]FS-01B)'
      model: '$1 55.0"'
    - regex: '(LF1V[0-9]{3})'
      model: '$1'
    - regex: '40FB5426'
      model: '40FB5426'

# Toshiba
Toshiba:
  regex: 'Toshiba'
  device: 'tv'
  models:
    - regex: '40L2600'
      model: '40L2600'
    - regex: '(([0-9]{2}|DTV_)[A-Z]{2}[0-9]{1,3})'
      model: '$1'

# Videoweb
Videoweb:
  regex: 'videoweb|tv2n'
  device: 'tv'
  models:
    - regex: '(tv2n)'
      model: '$1'
    - regex: '(videowebtv)'
      model: 'VideoWeb TV'

# VOX (https://www.voxelectronics.com/)
VOX:
  regex: 'VOX'
  device: 'tv'
  models:
    - regex: 'MB130'
      model: 'MB130'

# WELLINGTON
WELLINGTON:
  regex: 'WELLINGTON'
  device: 'tv'
  models:
    - regex: 'MB211'
      model: 'MB211'

# X.Vision
X.Vision:
  regex: 'X-VISION[;,]'
  device: 'tv'
  model: ''

# Vestel
Vestel:
  regex: '(?:Vestel.+VESTEL|VESTEL;)'
  device: 'tv'
  models:
    - regex: '(MB[0-9]{2})'
      model: '$1'
